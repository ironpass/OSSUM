1.1 What are the three main purposes of an operating system?
	(resources -> environment exe -> prevent errors -> I/O)
	1) Allocate CPU resources
	2) Provide environment for program execution
	3) Supervise program execution to prevent errors
	4) Manage I/O
	5) Communication
1.2 What are the main differences between operating
	(for user / for efficiency)
	- Personal computer operating system is not concerned with fair use or maximal use of computer resources. Instead, they try to optimize the usefulness of the computer for an individual user
	- Mainframe operating system need more complex scheduling and I/0 algorithms to keep the various system components (for example, CPU, memory, peripheral devices) efficiently utilized
1.3 The four states needed to run a program on a completely dedicated machine
	(CPU time -> load to mem -> decode instruction -> control the program)
	1. Allocate CPU time to run the program
	2. Load program into memory, then fetch for instructions
	3. Decode the instructions
	4. Control execution of program from console
1.5 What is the main difficulty that challenges a programmer for a real-time environment
	(If not complete on time -> Breakdown)
	The main difficulty is keeping the operating system within the fixed time constraints of a real-time system
1.7 How does the distinction between kernel mode and user mode function as a rudimentary form of protection (security) system
	(Limited bound of the user mode)
	- Certain instructions can only be executed in kernel mode, thus it prevents the user to wreck the system.
	- the CPU has very limited capability when executing in user mode, thereby enforcing protection of critical resources
1.8 Some early computers protected the operating system by placing it in a memory partition that could not be modified by either the user job or the operating system itself. Describe two difficulties that you think could arise with such a scheme
	(User access -> fatal error)
	- Attempt by a program executing in user mode to access monitor memory or other users’ memory will treat as a fatal error so this will be difficult to store information and execute them later.
1.9 The issue of resource utilization shows up in different forms in different types of operating systems. List what resources must be managed carefully in the following settings: a. Mainframe or minicomputer systems b. Workstations connected to servers c. Handheld computers
	- Mainframes -> memory and CPU resources, storage, network bandwidth.
	- Workstations -> memory and CPU resouces
	- Handheld computers -> power consumption, memory resources
1.22 What is the purpose of interrupts? What are the differences between a trap and an interrupt? Can traps be generated intentionally by a user program? If so, for what purpose
	- Interrupts come from hardware and the handling is asynchronous, meaning that they don't happen at predictable places. Traps are software generated and the handling is synchronous, meaning that they do happen in predictable places.
1.28 Describe a mechanism for enforcing memory protection in order to prevent a program from modifying the memory associated with other programs
	- The processor could keep track of what locations are associated with each process and limit access to locations that are outside of a program’s extent
	- Information regarding the extent of a program’s memory could be maintained by using base and limits registers and by performing a check for every memory access
1.30 Types of operating system
	https://www.tutorialspoint.com/operating_system/os_types.htm
